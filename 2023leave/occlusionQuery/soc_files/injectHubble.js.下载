window.neteaseClickStat = window.neteaseClickStat || function () {};
window.neteaseTracker = window.neteaseTracker || function () {};
const appKeys = {
  'km': 'MA-ACDA-BCCED4A26C8A',
  'kms': 'MA-B81D-6D453EE22C87',
};
const currSrc = document.currentScript.src;
const urlObj = new URL(currSrc);
let appKey = '';
const path = urlObj.searchParams.get('path');
// 除path 外的其余路径 按默认 appKey 上报
const isRestPathRecord = urlObj.searchParams.get('isRestPathRecord');
if (
  /^\S*(test-|uat-)(km|kms)\.\S+/.test(location.host) ||
  /^(localhost|127.0.0.1)\S+/.test(location.host)
) {
  if (path) {
    if (location.pathname.includes(path)) {
      appKey = 'MA-9695-E1D67F6F8D75';
    } else if (isRestPathRecord) {
      appKey = 'MA-9695-E1D67F6F8D75';
    }
  } else {
    appKey = 'MA-9695-E1D67F6F8D75';
  }
} else {
  const env = location.host.match(/\S*(km|kms)\.netease\.com/)[1] // km | kms
  const appId = urlObj.searchParams.get('appKey') || appKeys[env];
  if (path) {
    if (location.pathname.includes(path)) {
      appKey = appId;
    } else if (isRestPathRecord) {
      appKey = appKeys[env];
    }
  } else {
    appKey = appId;
  }
}
if (appKey) {
  (function (j, k, l) {
    var m = {};
    m.cookie = {
      get: function (a) {
        var b = a + '=';
        var d = j.cookie.split(';');
        for (var i = 0; i < d.length; i++) {
          var c = d[i];
          while (c.charAt(0) == ' ') {
            c = c.substring(1, c.length);
          }
          if (c.indexOf(b) === 0) {
            return decodeURIComponent(c.substring(b.length, c.length));
          }
        }
        return null;
      },
      parse: function (a) {
        var b;
        try {
          b = _.JSONDecode(_.cookie.get(a)) || {};
        } catch (err) {}
        return b;
      },
      set: function (a, b, c, d, e) {
        var f = '',
          expires = '',
          secure = '';
        if (d) {
          var g = j.location.hostname.match(
              /[a-z0-9][a-z0-9\-]+\.[a-z\.]{2,6}$/i,
            ),
            domain = g ? g[0] : '';
          f = domain ? '; domain=.' + domain : '';
        }
        if (c) {
          var h = new Date();
          h.setTime(h.getTime() + c * 24 * 60 * 60 * 1000);
          expires = '; expires=' + h.toGMTString();
        }
        if (e) {
          secure = '; secure';
        }
        var i =
          a + '=' + encodeURIComponent(b) + expires + '; path=/' + f + secure;
        j.cookie = i;
        return i;
      },
      remove: function (a, b) {
        _.cookie.set(a, '', -1, b);
      },
    };
    l.getHubbleJSSDKVersions = function (a) {
      m.cookie.set('mp_versions_hubble_jsSDK', a, false, true);
      loadJsSDK();
    };
    function removeElement(a) {
      var b = a.parentNode;
      if (b) {
        b.removeChild(a);
      }
    }
    function addScriptTag(a) {
      var b;
      var c = j.getElementsByTagName('head')[0];
      var d = j.createElement('script');
      var e = m.cookie.get('mp_versions_hubble_jsSDK');
      d.setAttribute('type', 'text/javascript');
      d.src = a;
      d.onload = d.onreadystatechange = function () {
        if (!b && (!d.readyState || /loaded|complete/.test(d.readyState))) {
          d.onload = d.onreadystatechange = null;
          b = true;
          removeElement(d);
        }
      };
      c.appendChild(d);
    }
    function addScriptTagTwo(a, b) {
      var c = true;
      var d;
      try {
        d = j.createElement('iframe');
        d.style.display = 'none';
      } catch (e) {
        d = j.createElement('iframe');
        d.setAttribute('src', a);
      }
      var f = function () {
        if (c) {
          d.contentWindow.location = 'about:blank';
          c = false;
        } else {
          b(d.contentWindow.name);
          d.contentWindow.document.write('');
          d.contentWindow.close();
          j.body.removeChild(d);
          d.src = '';
          d = null;
        }
      };
      d.src = a;
      if (d.attachEvent) {
        d.attachEvent('onload', f);
      } else {
        d.onload = f;
      }
      if (d) {
        j.body.appendChild(d);
      }
    }
    function loadJsSDK() {
      var a = m.cookie.get('mp_versions_hubble_jsSDK');
      var b = 'https://hubble.netease.com/track/w/DATracker.globals.js';
      var c, first_script;
      c = j.createElement('script');
      c.type = 'text/javascript';
      c.async = true;
      if (a) {
        b = 'https://hubble-js-bucket.nosdn.127.net/' + a + '.js';
      }
      c.src = b;
      first_script = j.getElementsByTagName('script')[0];
      first_script.parentNode.insertBefore(c, first_script);
    }
    if (!k['__SV']) {
      var n = window;
      try {
        var o,
          matches,
          state,
          loc = n.location,
          hash = loc.hash;
        o = function (a, b) {
          matches = a.match(new RegExp(b + '=([^&]*)'));
          return matches ? matches[1] : null;
        };
        if (hash && o(hash, 'state')) {
          state = JSON.parse(decodeURIComponent(o(hash, 'state')));
          if (state['action'] === 'mpeditor') {
            n.sessionStorage.setItem('_mpcehash', hash);
            history.replaceState(
              state['desiredHash'] || '',
              j.title,
              loc.pathname + loc.search,
            );
          }
        }
      } catch (e) {}
      var p,
        functions,
        i,
        lib_name = 'DATracker';
      window[lib_name] = k;
      k['_i'] = [];
      k['init'] = function (d, e, f) {
        var g = k;
        if (typeof f !== 'undefined') {
          g = k[f] = [];
        } else {
          f = lib_name;
        }
        g['people'] = g['people'] || [];
        g['abtest'] = g['abtest'] || [];
        g['toString'] = function (a) {
          var b = lib_name;
          if (f !== lib_name) {
            b += '.' + f;
          }
          if (!a) {
            b += ' (stub)';
          }
          return b;
        };
        g['people']['toString'] = function () {
          return g.toString(1) + '.people (stub)';
        };
        function _set_and_defer(a, b) {
          var c = b.split('.');
          if (c.length == 2) {
            a = a[c[0]];
            b = c[1];
          }
          a[b] = function () {
            a.push([b].concat(Array.prototype.slice.call(arguments, 0)));
          };
        }
        functions =
          'get_user_id track_heatmap register_attributes register_attributes_once clear_attributes unregister_attributes current_attributes single_pageview disable time_event get_appStatus track set_userId track_pageview track_links track_forms register register_once alias unregister identify login logout signup name_tag set_config reset people.set people.set_once people.set_realname people.set_country people.set_province people.set_city people.set_age people.set_gender people.increment people.append people.union people.track_charge people.clear_charges people.delete_user people.set_populationWithAccount  people.set_location people.set_birthday people.set_region people.set_account abtest.get_variation abtest.async_get_variable'.split(
            ' ',
          );
        for (i = 0; i < functions.length; i++) {
          _set_and_defer(g, functions[i]);
        }
        k['_i'].push([d, e, f]);
      };
      k['__SV'] = 1.6;
    }
    if (!m.cookie.get('mp_versions_hubble_jsSDK')) {
      addScriptTag(
        'https://hubble.netease.com/track/w/version.js?random' + Math.random(),
      );
    } else {
      loadJsSDK();
    }
  })(document, window['DATracker'] || [], window);
  DATracker.init(appKey, {
    truncateLength: 255,
    persistence: 'localStorage',
    cross_subdomain_cookie: false,
    is_single_page: true,
    single_page_config: { mode: 'history' },
  });
}
