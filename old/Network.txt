1.输入网址后流程
(1)域名解析：浏览器缓存，系统缓存，路由器缓存，DNS服务器
(2)向得到的IP地址发送HTTP请求，传输层传输报文，TCP(三次握手四次挥手)或者UDP，到达IP层确定路由，利用ARP协议转换IP地址到MAC地址
(3)服务器相应请求，传回相应的文件。

2.osi七层模型：物理层，数据链路层，网络层，传输层，会话层，表示层，应用层
  五层模式：物理层，数据链路层，网络层，传输层，应用层，若是四层将物理层和数据链路层合并为网络接口层。
  
3.网络层：向上提供简单灵活无连接尽最大努力交互的数据报服务。协议有IP，ARP，ICMP，IGMP
    地址编址方式经历了分类，子网划分，无分类三个阶段。
	NAT：网络地址转换，将内网IP转换为全球IP

4.传输层：
 (1)比较：UDP是无连接，尽最大可能交付，没有拥塞控制，面向报文的协议，支持一对一，一对多，多对一，多对多的通信。
          TCP面向连接的，提供可靠交付，有流量控制，拥塞控制，提供全双工通信，面向字节流的协议。
		  
 (2)TCP三次握手过程：过程略。原因：防止失效的连接请求达到服务器，让服务器错误打开连接。
 (3)TCP的四次挥手：TIME_WAIT阶段：一般时间为2MSL。首先确保最后一个确认报文能够到达，应对另一端没能收到报文，重新发送请求释放连接的报文的情况。
      再者可以让本链接在该时间段内产生的所有报文都消失，下一个新的连接不会出现旧的连接报文。
	  
5.TCP专题：
  (1)可靠传输：使用超时重传实现可靠传输。超时时间内没有收到确认，就重传报文段。
  (2)滑动窗口
  (3)流量控制：控制发送方发送速率，保证接收方来得及接收。接收方确认报文段中有窗口字段可以控制发送发发送窗口的大小。
  (4)拥塞控制：降低网络的拥塞程度。
  慢开始和拥塞避免：达到阈值wsx前，指数加倍，慢开始阈值达到后，每次发送窗口+1.超时之后阈值取当前窗口值得一半，当前窗口值为1，执行慢开始。
  快重传与快恢复：收到三个重复确认时，认为报文段丢失，执行快重传。阈值为当前窗口值的一般，当前窗口值和阈值相同。


6.套接字：
 select：支持的套接字数量有限，基于数组，会修改描述符的数组
 poll：使用链表实现，支持套接字的数量没有上限，不会修改描述符数组，提供了更多的事件类型，对描述符的重复利用比select高。
  缺陷：两者的速度都比较慢，每次调用都需要将全部描述符从应用进程缓冲区复制到内核缓冲区。返回的结果没有声明哪些描述符以准备好，需要以轮询
       方式来检查。支持select的系统更多一些。
  
 epoll：epoll_create,epoll_ctl,epoll_wait三个函数控制。底层用红黑树来管理注册的描述符。会将I/O准备好的描述符加入链表管理，不用轮询来获得就绪的
		描述符，描述符只需要从进程缓冲区想内核缓冲区拷贝一次，仅适用于Linux，没有描述符限制，线程更友好。
    LT模式：水平触发，有事件时通知进程，进程可以不处理，下次继续通知，默认模式，同时支持Blocking和No_Blocking模式
	ET模式：边缘触发，通知后进程必须处理事件，因为下次不会继续通知，效率高一点。
	
 综合对比：
 select时间精度更高，使用实时性要求高的场景。可移植性好，poll没有描述符限制，epoll只适用于Linux平台，适用于大量描述符，长连接多的场景。
 描述符较少时体现不出其优势。此外描述符状态变化多时，也没有必要使用epoll，因为描述符存在内核中，状态改变需要系统调用，还有不容易调试。





1.http的方法：
 (1)GET:获取资源  
 (2)HEAD：获取报文首部，不返回报文的实体主体部分，主要用于确认URL的有效性和资源更新的日期时间。
 (3)POST：主要用来传输数据，GET是用来获取资源。
 (4)PUT：上传文件，没有验证机制
 (5)PATCH：部分修改文件，PUT是整个覆盖。
 (6)DELETE:删除文件，无验证机制
 (7)OPTIONS：查询支持的方法
 (8)CONNECT：要求与代理服务器通信时建立隧道，使用SSL和TSL(Transport Layer Security)加密传输文件。
 (9)Trace：追踪路径。
 
2.状态码：
 (1)1XX:信息性状态码，请求正在处理，100
 (2)2XX:成功。200,204,206等。
 (3)3XX：重定向
 (4)4XX:客户端错误，报文语法错误，未认证，请求被拒绝，Not Found等。
 (5)5XX:服务端错误
 暂时割了。
